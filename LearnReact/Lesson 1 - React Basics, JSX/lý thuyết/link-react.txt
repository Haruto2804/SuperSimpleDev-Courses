React trong khóa học
<script src="https://unpkg.com/supersimpledev/react.js"></script>
<script src="https://unpkg.com/supersimpledev/react-dom.js"></script>
<script src="https://unpkg.com/supersimpledev/babel.js"></script>

<script type="text/babel">
</script></> 
// babel là JS Compiler, dùng để sử dụng các phần HTML vào trong JS Code, đây là enhanced version of JS called JSX (Java Script XML)
, chính vì như thế khi sử dụng Reate ta dùng JSX 
thay vì JS bình thường
- Có 1 vấn đề với JSX: Web browser ko hiểu về JSX, 
vì thế ta cần phải biến đổi JSX thành JS để web browser hiểu code đó là gì, do đó ta cần cài Babel = biên dịch JSX sang JS để Web Browser hiểu
- Insert Value into JS code 

</script>

React:
<script src="https://unpkg.com/react@18/umd/react.development.js"></>
<script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
<script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>






*** Lưu y
Bạn **không nhất thiết** phải cài đặt chương trình phức tạp để bắt đầu học React. Bạn hoàn toàn có thể nhúng nó vào file HTML như các thư viện khác.

-----

### \#\# Cách 1: Dùng trực tiếp trong HTML (Không cần cài đặt) 💡

Cách này rất tuyệt vời để học, làm các project nhỏ hoặc thử nghiệm nhanh các tính năng của React mà không cần cài đặt phức tạp.

**✅ Ưu điểm:**

  * **Nhanh và đơn giản:** Chỉ cần một file HTML là đủ.
  * **Không cần cài đặt:** Không cần Node.js, npm hay các công cụ dòng lệnh.

**❌ Nhược điểm:**

  * Không được tối ưu hóa cho các ứng dụng lớn (production).
  * Khó quản lý khi dự án lớn dần.

**Cách làm:**
Bạn chỉ cần tạo một file `index.html` và chèn 3 thẻ `<script>` sau vào trước thẻ `</body>`:

1.  **React:** Thư viện lõi của React.
2.  **React DOM:** Thư viện giúp React tương tác với trình duyệt (DOM).
3.  **Babel:** Công cụ dịch mã JSX (cú pháp viết component của React) thành JavaScript thuần mà trình duyệt hiểu được.

**Ví dụ một file `index.html` hoàn chỉnh:**

```html
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8" />
  <title>Học React không cần cài đặt</title>
</head>
<body>

  <div id="root"></div>

  <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
  <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
  <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>

  <script type="text/babel">
    const container = document.getElementById('root');
    const root = ReactDOM.createRoot(container);
    root.render(<h1>Chào mừng bạn đến với React!</h1>);
  </script>

</body>
</html>
```

Bạn chỉ cần lưu file này và mở bằng trình duyệt là sẽ thấy kết quả ngay lập tức\!

-----

### \#\# Cách 2: Tạo môi trường phát triển chuyên nghiệp (Cần cài đặt) 🚀

Đây là cách tiêu chuẩn để xây dựng các ứng dụng React thực tế, lớn và chuyên nghiệp.

**✅ Ưu điểm:**

  * **Tối ưu hóa:** Code của bạn sẽ được nén và tối ưu để chạy nhanh nhất.
  * **Môi trường phát triển mạnh mẽ:** Có sẵn server live-reload (tự động tải lại trang khi bạn sửa code), quản lý thư viện dễ dàng.
  * **Cấu trúc dự án rõ ràng:** Phù hợp để xây dựng các ứng dụng lớn và làm việc nhóm.

**Cách làm:**
Bạn cần cài đặt **Node.js** (đã bao gồm trình quản lý gói **npm**).

1.  **Cài đặt Node.js:** Tải và cài đặt từ trang chủ [nodejs.org](https://nodejs.org/).
2.  **Sử dụng công cụ tạo dự án:** Các công cụ như **Vite** hoặc **Create React App** sẽ giúp bạn tạo toàn bộ cấu trúc dự án chỉ bằng một dòng lệnh. **Vite** hiện đang là lựa chọn phổ biến và rất nhanh.
3.  **Tạo dự án mới với Vite:** Mở terminal (Command Prompt hoặc PowerShell trên Windows) và gõ lệnh sau:
    ```bash
    npm create vite@latest my-react-project -- --template react
    ```
4.  **Chạy dự án:**
    ```bash
    cd my-react-project  # Di chuyển vào thư mục dự án
    npm install          # Cài đặt các thư viện cần thiết
    npm run dev          # Khởi động server phát triển
    ```

Sau đó, bạn chỉ cần truy cập vào địa chỉ mà terminal cung cấp (thường là `http://localhost:5173`) để xem ứng dụng của mình.

### Tóm tắt

  * **Để học và thử nghiệm:** Hãy bắt đầu với **Cách 1**. Nó đơn giản và giúp bạn tập trung vào việc học React.
  * **Để xây dựng dự án thực tế:** Hãy dùng **Cách 2**. Đây là con đường chuyên nghiệp và bền vững.